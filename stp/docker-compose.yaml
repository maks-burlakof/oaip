services:
  postgres:
    container_name: babushka-postgres
    image: postgres:16
    user: postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: babushka
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 30s
      timeout: 5s
      retries: 5

  backend:
    container_name: babushka-backend
    build: ./backend
    volumes:
      - ./backend/src:/app/src
    networks:
      - app-network
    ports:
      - "8000:8000"
    environment:
      ENV: dev
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/healthcheck"]
      interval: 30s
      timeout: 5s
      retries: 5
    command: >
      bash -c "
      python3 manage.py migrate && 
      python3 manage.py runserver 0.0.0.0:8000
      "

  frontend:
    container_name: babushka-frontend
    build: ./frontend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - app-network
    ports:
      - "3000:3000"
    environment:
      REACT_APP_BACKEND_URL: http://localhost:8000
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 60s
      timeout: 5s
      retries: 5
    command: npm start

volumes:
  postgres-data:
    driver: local

networks:
  app-network:
    driver: bridge