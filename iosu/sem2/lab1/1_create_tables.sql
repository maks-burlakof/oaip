-- Creating all tables


CREATE TABLE TOOLSTORAGE.JOBPOSITION (
    ID NUMBER GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1 NOCACHE) PRIMARY KEY,
    TITLE VARCHAR2(50) UNIQUE NOT NULL
);

CREATE SYNONYM EMPLOYEEJOBPOSITION FOR TOOLSTORAGE.JOBPOSITION;


CREATE TABLE TOOLSTORAGE.EMPLOYEE (
    ID NUMBER GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1 NOCACHE) PRIMARY KEY,
    FIRST_NAME VARCHAR2(50) NOT NULL,
    LAST_NAME VARCHAR2(50) NOT NULL,
    MIDDLE_NAME VARCHAR2(50),
    GENDER CHAR(1) CHECK (gender IN ('M', 'F')) NOT NULL,
    JOB_POSITION_ID NUMBER NOT NULL,
    FOREIGN KEY (JOB_POSITION_ID) REFERENCES TOOLSTORAGE.JOBPOSITION(ID)
);

CREATE INDEX TOOLSTORAGE.IDX_EMPLOYEE_POSITION ON TOOLSTORAGE.EMPLOYEE(JOB_POSITION_ID);


CREATE TABLE TOOLSTORAGE.PRODUCT (
    ID NUMBER GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1 NOCACHE) PRIMARY KEY,
    TITLE VARCHAR2(100) NOT NULL,
    AVERAGE_PRODUCTION_TIME NUMBER CHECK (AVERAGE_PRODUCTION_TIME > 0) NOT NULL
);


CREATE TABLE TOOLSTORAGE.EQUIPMENTTYPE (
    ID NUMBER GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1 NOCACHE) PRIMARY KEY,
    TITLE VARCHAR2(50) UNIQUE NOT NULL
);


CREATE TABLE TOOLSTORAGE.EQUIPMENT (
    ID NUMBER GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1 NOCACHE) PRIMARY KEY,
    TITLE VARCHAR2(100) NOT NULL,
    TYPE_ID NUMBER NOT NULL,
    DATE_OF_COMMISSIONING DATE NOT NULL,
    DATE_OF_LAST_SERVICE DATE,
    RESPONSIBLE_EMPLOYEE_ID NUMBER NOT NULL,
    FOREIGN KEY (TYPE_ID) REFERENCES TOOLSTORAGE.EQUIPMENTTYPE(ID),
    FOREIGN KEY (RESPONSIBLE_EMPLOYEE_ID) REFERENCES TOOLSTORAGE.EMPLOYEE(ID)
);


CREATE TABLE TOOLSTORAGE.TOOLS (
    ID NUMBER GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1 NOCACHE) PRIMARY KEY,
    TITLE VARCHAR2(100) NOT NULL,
    TOTAL_AMOUNT NUMBER CHECK (TOTAL_AMOUNT > 0) NOT NULL,
    WEAR_DEGREE NUMBER CHECK (WEAR_DEGREE BETWEEN 0 AND 1000) NOT NULL
);

CREATE INDEX TOOLSTORAGE.IDX_TOOLS_WEAR_DEGREE ON TOOLSTORAGE.TOOLS(WEAR_DEGREE);


CREATE TABLE TOOLSTORAGE.TECHNOLOGICALMAP (
    ID NUMBER GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1 NOCACHE) PRIMARY KEY,
    MAP_NUMBER VARCHAR2(20) NOT NULL,
    PRODUCT_ID NUMBER NOT NULL,
    EQUIPMENT_ID NUMBER NOT NULL,
    FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT(id),
    FOREIGN KEY (EQUIPMENT_ID) REFERENCES EQUIPMENT(id)
);

ALTER TABLE TOOLSTORAGE.TECHNOLOGICALMAP ADD CONSTRAINT CHK_TECHNOLOGICALMAP_NUMBER CHECK (REGEXP_LIKE(MAP_NUMBER, '^[A-Z]{2}-\d{3}-\d{2}$'));


CREATE TABLE TOOLSTORAGE.TECHNOLOGICALMAPSTOOLS (
    ID NUMBER GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1 NOCACHE) PRIMARY KEY,
    TECHNOLOGICAL_MAP_ID NUMBER NOT NULL,
    TOOLS_ID NUMBER NOT NULL,
    NUMBER_OF_REQUIRED_TOOLS NUMBER CHECK (NUMBER_OF_REQUIRED_TOOLS > 0) NOT NULL,
    FOREIGN KEY (TECHNOLOGICAL_MAP_ID) REFERENCES TOOLSTORAGE.TECHNOLOGICALMAP(ID),
    FOREIGN KEY (TOOLS_ID) REFERENCES TOOLSTORAGE.TOOLS(ID)
);


CREATE TABLE TOOLSTORAGE.PRODUCTION (
    TECHNOLOGICAL_MAP_ID NUMBER NOT NULL,
    START_DATE DATE NOT NULL,
    END_DATE DATE NOT NULL,
    NUMBER_OF_REQUIRED_PRODUCTS NUMBER CHECK (NUMBER_OF_REQUIRED_PRODUCTS > 0) NOT NULL,
    NUMBER_OF_DEFECTS NUMBER CHECK (NUMBER_OF_DEFECTS >= 0) NOT NULL,
    FOREIGN KEY (TECHNOLOGICAL_MAP_ID) REFERENCES TOOLSTORAGE.TECHNOLOGICALMAP(ID)
);

ALTER TABLE TOOLSTORAGE.PRODUCTION ADD CONSTRAINT CHK_START_END_DATES CHECK (END_DATE >= START_DATE);
ALTER TABLE TOOLSTORAGE.PRODUCTION ADD CONSTRAINT CHK_NUMBER_OF_PRODUCTS CHECK (NUMBER_OF_REQUIRED_PRODUCTS >= NUMBER_OF_DEFECTS);
ALTER TABLE TOOLSTORAGE.PRODUCTION ADD CONSTRAINT CHK_UQ_PRODUCTION UNIQUE (TECHNOLOGICAL_MAP_ID, START_DATE, END_DATE, NUMBER_OF_REQUIRED_PRODUCTS, NUMBER_OF_DEFECTS);
